name: Deploy to GCP VM

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DATE_TAG: v${{ github.run_number }}-${{ github.sha }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/streampulse-backend:${{ env.DATE_TAG }} -f backend/Dockerfile.prod ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/streampulse-backend:${{ env.DATE_TAG }}

      - name: Build and push processor image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/streampulse-processor:${{ env.DATE_TAG }} -f processor/Dockerfile.prod ./processor
          docker push ${{ secrets.DOCKER_USERNAME }}/streampulse-processor:${{ env.DATE_TAG }}

      - name: Create secret files locally
        run: |
          echo "${{ secrets.ENV_PROD }}" > .env
          echo "${{ secrets.CREDENTIALS_JSON_B64 }}" | base64 --decode > credentials.json

      - name: Send secret files to GCP VM
        run: |
          scp -o StrictHostKeyChecking=no .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/jyhun/StreamPulse/infra/prod/.env
          scp -o StrictHostKeyChecking=no credentials.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/jyhun/StreamPulse/infra/prod/credentials.json

      - name: Deploy to GCP VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            cd /home/jyhun/StreamPulse
            git fetch origin main
            git reset --hard origin/main
            sed -i 's|streampulse-backend:.*|streampulse-backend:${{ env.DATE_TAG }}|' infra/prod/docker-compose.yml
            sed -i 's|streampulse-processor:.*|streampulse-processor:${{ env.DATE_TAG }}|' infra/prod/docker-compose.yml
            docker compose -f infra/prod/docker-compose.yml pull
            docker compose -f infra/prod/docker-compose.yml up -d
          EOF
